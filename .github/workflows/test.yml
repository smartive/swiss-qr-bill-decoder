name: Test

env:
  PROJECT_NAME: swiss-qr-bill-decoder
  CARGO_TERM_COLOR: always

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
       include:
         - name: linux-amd64
           runner: ubuntu-latest
           target: x86_64-unknown-linux-gnu
         - name: win-amd64
           runner: windows-latest
           target: x86_64-pc-windows-msvc
         - name: macos-amd64
           runner: macos-latest
           target: x86_64-apple-darwin
         - name: macos-arm64
           runner: macos-latest
           target: aarch64-apple-darwin

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: "${{ matrix.target }}"

    - name: Rust (Cargo) Caching
      uses: Swatinem/rust-cache@v2

    - name: Install ghostscript (for linux)
      uses: awalsh128/cache-apt-pkgs-action@latest
      if: runner.os == 'ubuntu-latest'
      with:
        packages: ghostscript
        version: 1.0

    - name: Install ghostscript (for windowns)
      uses: crazy-max/ghaction-chocolatey@v3
      if: runner.os == 'windows-latest'
      with:
        args: install ghostscript


    - name: Install ghostscript (for macos)
      run: brew install ghostscript
      if: runner.os == 'macos-latest'

    - name: Build
      run: cargo build --verbose --locked --target ${{ matrix.target }}

    - name: Run tests
      run: cargo test --verbose --locked --target ${{ matrix.target }}
